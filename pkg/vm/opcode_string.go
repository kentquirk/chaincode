// Code generated by "stringer -trimprefix Op -type Opcode opcodes.go"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpNop-0]
	_ = x[OpDrop-1]
	_ = x[OpDrop2-2]
	_ = x[OpDup-5]
	_ = x[OpDup2-6]
	_ = x[OpSwap-9]
	_ = x[OpOver-12]
	_ = x[OpPick-13]
	_ = x[OpRoll-14]
	_ = x[OpTuck-15]
	_ = x[OpRet-16]
	_ = x[OpFail-17]
	_ = x[OpOne-26]
	_ = x[OpNeg1-27]
	_ = x[OpTrue-27]
	_ = x[OpMaxNum-28]
	_ = x[OpMinNum-29]
	_ = x[OpZero-32]
	_ = x[OpFalse-32]
	_ = x[OpPush1-33]
	_ = x[OpPush2-34]
	_ = x[OpPush3-35]
	_ = x[OpPush4-36]
	_ = x[OpPush5-37]
	_ = x[OpPush6-38]
	_ = x[OpPush7-39]
	_ = x[OpPush8-40]
	_ = x[OpPushB-42]
	_ = x[OpPushT-43]
	_ = x[OpNow-44]
	_ = x[OpRand-46]
	_ = x[OpPushL-47]
	_ = x[OpAdd-64]
	_ = x[OpSub-65]
	_ = x[OpMul-66]
	_ = x[OpDiv-67]
	_ = x[OpMod-68]
	_ = x[OpDivMod-69]
	_ = x[OpMulDiv-70]
	_ = x[OpNot-72]
	_ = x[OpNeg-73]
	_ = x[OpInc-74]
	_ = x[OpDec-75]
	_ = x[OpIndex-80]
	_ = x[OpLen-81]
	_ = x[OpAppend-82]
	_ = x[OpExtend-83]
	_ = x[OpSlice-84]
	_ = x[OpField-96]
	_ = x[OpIsField-97]
	_ = x[OpFieldL-112]
	_ = x[OpDef-128]
	_ = x[OpCall-129]
	_ = x[OpDeco-130]
	_ = x[OpEndDef-136]
	_ = x[OpIfZ-137]
	_ = x[OpIfNZ-138]
	_ = x[OpElse-142]
	_ = x[OpEndIf-143]
	_ = x[OpSum-144]
	_ = x[OpAvg-145]
	_ = x[OpMax-146]
	_ = x[OpMin-147]
	_ = x[OpChoice-148]
	_ = x[OpWChoice-149]
	_ = x[OpSort-150]
	_ = x[OpLookup-151]
	_ = x[OpHandler-160]
	_ = x[OpOr-176]
	_ = x[OpAnd-177]
	_ = x[OpXor-178]
	_ = x[OpCount1s-188]
	_ = x[OpBNot-191]
	_ = x[OpLt-192]
	_ = x[OpLte-193]
	_ = x[OpEq-194]
	_ = x[OpGte-195]
	_ = x[OpGt-196]
}

const _Opcode_name = "NopDropDrop2DupDup2SwapOverPickRollTuckRetFailOneNeg1MaxNumMinNumZeroPush1Push2Push3Push4Push5Push6Push7Push8PushBPushTNowRandPushLAddSubMulDivModDivModMulDivNotNegIncDecIndexLenAppendExtendSliceFieldIsFieldFieldLDefCallDecoEndDefIfZIfNZElseEndIfSumAvgMaxMinChoiceWChoiceSortLookupHandlerOrAndXorCount1sBNotLtLteEqGteGt"

var _Opcode_map = map[Opcode]string{
	0:   _Opcode_name[0:3],
	1:   _Opcode_name[3:7],
	2:   _Opcode_name[7:12],
	5:   _Opcode_name[12:15],
	6:   _Opcode_name[15:19],
	9:   _Opcode_name[19:23],
	12:  _Opcode_name[23:27],
	13:  _Opcode_name[27:31],
	14:  _Opcode_name[31:35],
	15:  _Opcode_name[35:39],
	16:  _Opcode_name[39:42],
	17:  _Opcode_name[42:46],
	26:  _Opcode_name[46:49],
	27:  _Opcode_name[49:53],
	28:  _Opcode_name[53:59],
	29:  _Opcode_name[59:65],
	32:  _Opcode_name[65:69],
	33:  _Opcode_name[69:74],
	34:  _Opcode_name[74:79],
	35:  _Opcode_name[79:84],
	36:  _Opcode_name[84:89],
	37:  _Opcode_name[89:94],
	38:  _Opcode_name[94:99],
	39:  _Opcode_name[99:104],
	40:  _Opcode_name[104:109],
	42:  _Opcode_name[109:114],
	43:  _Opcode_name[114:119],
	44:  _Opcode_name[119:122],
	46:  _Opcode_name[122:126],
	47:  _Opcode_name[126:131],
	64:  _Opcode_name[131:134],
	65:  _Opcode_name[134:137],
	66:  _Opcode_name[137:140],
	67:  _Opcode_name[140:143],
	68:  _Opcode_name[143:146],
	69:  _Opcode_name[146:152],
	70:  _Opcode_name[152:158],
	72:  _Opcode_name[158:161],
	73:  _Opcode_name[161:164],
	74:  _Opcode_name[164:167],
	75:  _Opcode_name[167:170],
	80:  _Opcode_name[170:175],
	81:  _Opcode_name[175:178],
	82:  _Opcode_name[178:184],
	83:  _Opcode_name[184:190],
	84:  _Opcode_name[190:195],
	96:  _Opcode_name[195:200],
	97:  _Opcode_name[200:207],
	112: _Opcode_name[207:213],
	128: _Opcode_name[213:216],
	129: _Opcode_name[216:220],
	130: _Opcode_name[220:224],
	136: _Opcode_name[224:230],
	137: _Opcode_name[230:233],
	138: _Opcode_name[233:237],
	142: _Opcode_name[237:241],
	143: _Opcode_name[241:246],
	144: _Opcode_name[246:249],
	145: _Opcode_name[249:252],
	146: _Opcode_name[252:255],
	147: _Opcode_name[255:258],
	148: _Opcode_name[258:264],
	149: _Opcode_name[264:271],
	150: _Opcode_name[271:275],
	151: _Opcode_name[275:281],
	160: _Opcode_name[281:288],
	176: _Opcode_name[288:290],
	177: _Opcode_name[290:293],
	178: _Opcode_name[293:296],
	188: _Opcode_name[296:303],
	191: _Opcode_name[303:307],
	192: _Opcode_name[307:309],
	193: _Opcode_name[309:312],
	194: _Opcode_name[312:314],
	195: _Opcode_name[314:317],
	196: _Opcode_name[317:319],
}

func (i Opcode) String() string {
	if str, ok := _Opcode_map[i]; ok {
		return str
	}
	return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
}
