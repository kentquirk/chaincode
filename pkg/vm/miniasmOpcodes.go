package vm

// these are the opcodes supported by mini-asm
var opcodeMap = map[string]Opcode{
	"nop":     OpNop,
	"drop":    OpDrop,
	"drop2":   OpDrop2,
	"dup":     OpDup,
	"dup2":    OpDup2,
	"swap":    OpSwap,
	"over":    OpOver,
	"pick":    OpPick,
	"roll":    OpRoll,
	"tuck":    OpTuck,
	"ret":     OpRet,
	"fail":    OpFail,
	"zero":    OpZero,
	"false":   OpFalse,
	"pushN":   OpPushN,
	"push1":   OpPush1,
	"push2":   OpPush2,
	"push3":   OpPush3,
	"push4":   OpPush4,
	"push5":   OpPush5,
	"push6":   OpPush6,
	"push7":   OpPush7,
	"push8":   OpPush8,
	"pushb":   OpPushB,
	"one":     OpOne,
	"true":    OpTrue,
	"neg1":    OpNeg1,
	"pusht":   OpPushT,
	"now":     OpNow,
	"pusha":   OpPushA,
	"rand":    OpRand,
	"pushl":   OpPushL,
	"add":     OpAdd,
	"sub":     OpSub,
	"mul":     OpMul,
	"div":     OpDiv,
	"mod":     OpMod,
	"divmod":  OpDivMod,
	"muldiv":  OpMulDiv,
	"not":     OpNot,
	"neg":     OpNeg,
	"inc":     OpInc,
	"dec":     OpDec,
	"eq":      OpEq,
	"lt":      OpLt,
	"gt":      OpGt,
	"index":   OpIndex,
	"len":     OpLen,
	"append":  OpAppend,
	"extend":  OpExtend,
	"slice":   OpSlice,
	"field":   OpField,
	"fieldl":  OpFieldL,
	"def":     OpDef,
	"call":    OpCall,
	"deco":    OpDeco,
	"ifz":     OpIfz,
	"ifnz":    OpIfnz,
	"else":    OpElse,
	"enddef":  OpEndDef,
	"endif":   OpEndIf,
	"sum":     OpSum,
	"avg":     OpAvg,
	"max":     OpMax,
	"min":     OpMin,
	"choice":  OpChoice,
	"wchoice": OpWChoice,
	"sort":    OpSort,
	"lookup":  OpLookup,
}
